=== 依存関係分析レポート ===

== 基本統計 ==
分析対象モジュール数: 36
総インポート数: 116
依存関係数: 111
検出された循環依存: 0

== 🎯 orb.py 依存関係分析 ==
=== orb.py からインポートしているファイル ===
  📄 orb_hybrid_wrapper.py (line 59): start_trading
  📄 orb_refactored.py (line 22): api, order_status, is_uptrend, is_above_ema, get_opening_range...

=== 🚨 リスクの高いインポート (グローバル状態) ===
  ⚠️  orb_refactored.py (line 22): api, order_status

=== ⚡ 潜在的な循環依存リスク ===
  🔄 orb_hybrid_wrapper.py (medium): start_trading
  🔄 orb_refactored.py (high): api, order_status, is_uptrend...

== 📊 依存関係マップ ==
  earnings_swing_short → api_clients, dividend_portfolio_management, risk_management, strategy_allocation
  execution_monitor → config, logging_config
  trend_reversion_etf → api_clients, common_constants, risk_management, strategy_allocation, uptrend_stocks
  maintain_swing → api_clients, common_constants, config, dividend_portfolio_management, logging_config, trend_reversion_etf, uptrend_stocks
  risk_management → api_clients, config, logging_config, strategy_allocation
  state_manager → logging_config
  global_state_migration → logging_config
  trend_reversion_stock → api_clients, common_constants, config, dividend_portfolio_management, risk_management, strategy_allocation, uptrend_stocks
  logging_config → config
  orb_global_refactor → api_clients, logging_config, orb_config, orb_state_manager
  orb_config → logging_config
  risk_management_refactored → api_clients, config, logging_config, strategy_allocation
  orb_hybrid_wrapper → logging_config, orb, orb_config, orb_global_refactor, orb_state_manager
  orb → api_clients, common_constants, config, logging_config, orb_config, orb_helper, orb_memory_utils, orb_state_manager
  uptrend_stocks → api_clients, common_constants
  dividend_portfolio_management → api_clients, common_constants, config, strategy_allocation, uptrend_stocks
  earnings_swing → api_clients, common_constants, concurrent_data_fetcher, config, dividend_portfolio_management, logging_config, parallel_executor, risk_management, strategy_allocation
  news_analysis → api_clients
  api_health_monitor → circuit_breaker, logging_config
  uptrend_count_sector → api_clients, common_constants
  circuit_breaker → config, logging_config
  api_clients → circuit_breaker, config, logging_config
  strategy_allocation_refactored → api_clients, logging_config
  parallel_executor → config, execution_monitor, logging_config
  orb_helper → config, logging_config
  orb_refactored → logging_config, orb, orb_config
  strategy_allocation → api_clients, common_constants
  orb_short → api_clients, common_constants
  concurrent_data_fetcher → api_clients, config, logging_config
  dividend_portfolio_buy_signal → api_clients
  orb_state_manager → logging_config, orb_config
  orb_refactored_example → api_clients, config, logging_config, state_manager
  orb_memory_utils → logging_config
  relative_volume_trade → api_clients, common_constants, config, logging_config, news_analysis, parallel_executor

== 📋 推奨アクション ==
1. 🚨 **高優先度**: orb_refactored.py の直接インポート削除
2. 🔧 **中優先度**: インターフェース分離パターンの実装
3. 🏗️ **低優先度**: 依存性注入コンテナの導入
4. 🧹 **継続的**: グローバル状態の段階的排除

== 🚀 次のステップ ==
1. trading_interfaces.py の作成と実装
2. ORBAdapter の実装とテスト
3. orb_refactored.py の段階的修正
4. 循環依存の完全解消